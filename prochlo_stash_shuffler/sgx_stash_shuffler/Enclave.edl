// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

enclave {

    from "sgx_tsgxssl.edl" import *;

    trusted {
            public void ecall_set_key([in, string] const char* private_key_pem);
	    public void ecall_shuffle(
                             [user_check] void* shuffler_items,
                             uint64_t number_of_items,
                             uint64_t number_of_buckets,
                             uint64_t chunk_size,
                             uint64_t stash_size,
                             uint64_t stash_chunks,
                             uint64_t clean_up_window,
                            [user_check] void* analyzer_items,
                            [user_check] void* encrypted_intermediate_items,
                             uint64_t number_of_intermediate_shuffler_items);
	    public void ecall_distribute(
                             [user_check] void* shuffler_items,
                             uint64_t number_of_items,
                             uint64_t number_of_buckets,
                             uint64_t chunk_size,
                             uint64_t stash_size,
                             uint64_t stash_chunks,
                            [user_check] void* encrypted_intermediate_items,
                            [user_check] void* symmetric_key);
	    public void ecall_clean_up(
                             uint64_t number_of_items,
                             uint64_t number_of_buckets,
                             uint64_t chunk_size,
                             uint64_t stash_chunks,
                             uint64_t clean_up_window,
                            [user_check] void* analyzer_items,
                            [user_check] void* encrypted_intermediate_items,
                            [user_check] void* symmetric_key);
    };

    untrusted {
      void ocall_print_string([in, string] const char *str);
      void ocall_do_gettimeofday_start();
      void ocall_do_gettimeofday_end(uint64_t n);
    };
};
